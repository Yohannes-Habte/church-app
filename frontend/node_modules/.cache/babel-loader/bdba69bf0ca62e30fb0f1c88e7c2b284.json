{"ast":null,"code":"var _jsxFileName = \"/home/user/Desktop/myProjects/eritrean-roman-catholic-church-hamburg/frontend/src/App.js\",\n    _s = $RefreshSig$();\n\nimport LandingPage from \"./views/landingpage/LandingPage\";\nimport RegisterPage from './views/registerpage/RegisterPage';\nimport Navigation from \"./components/globalComponents/navbar/Navigation\";\nimport LoginPage from \"./views/loginpage/LoginPage\";\nimport { BrowserRouter as Router, Routes, Route, Navigate } from \"react-router-dom\";\nimport HowItWorksPage from \"./views/howitworks/HowItWorksPage\";\nimport SustainabilityPage from \"./views/sustainability/Sustainability\";\nimport CommunityPage from \"./views/community/CommunityPage\";\nimport MealsPage from \"./views/mealspage/MealsPage\";\nimport CartPage from \"./views/cartpage/CartPage\";\nimport StripeSuccessPage from \"./views/stripe/stripeSuccess\";\nimport StripeCancelPage from \"./views/stripe/stripeCancel\";\nimport Footer from \"./components/globalComponents/footer/Footer\";\nimport './App.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const MyContext = React.createContext();\n\nfunction App() {\n  _s();\n\n  const cartItems = JSON.parse(localStorage.getItem(\"cart\")) || [];\n  const userData = JSON.parse(localStorage.getItem(\"data\")) || null;\n  const [meals, setMeals] = useState([]);\n  const [cart, setCart] = useState(cartItems);\n  const [orders, setOrders] = useState([]);\n  const [user, setUser] = useState(userData); // this is the state variable that monitors the login\n\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [token, setToken] = useState(false);\n  const [isAdmin, setIsAdmin] = useState(false);\n  const [userId, setUserId] = useState(\"\");\n  const [hideSidemenu, setHideSideMenu] = useState(true); //======================================================================\n  // UseEffect used to handle user and meal data functions \n  //======================================================================\n\n  useEffect(() => {\n    //===============================\n    // Function to fetch user data\n    //==============================\n    const fetchUserData = async () => {\n      const data = JSON.parse(localStorage.getItem(\"data\"));\n\n      if (data) {\n        const settings = {\n          method: \"POST\",\n          headers: {\n            \"token\": data.token\n          }\n        };\n        const response = await fetch(process.env.REACT_APP_SERVER_URL + \"/users/verifytoken\", settings);\n        const result = await response.json();\n\n        try {\n          if (response.ok) {\n            const now = new Date();\n            const tokenExpiry = new Date(now.getTime() + 1000 * 60 * 60);\n            setIsLoggedIn(true);\n            setUser({\n              id: result.data._id,\n              info: result.data,\n              expiry: tokenExpiry.toISOString(),\n              token: result.token\n            });\n            setToken(data.token);\n            setIsAdmin(data.info.isAdmin); //setIsAdmin(result.isAdmin)\n          } else {\n            throw new Error(result.message);\n          }\n        } catch (err) {\n          alert(err.message);\n        }\n      }\n    };\n\n    fetchUserData(); //================================\n    // Function to fetch meals data\n    //===============================\n\n    const fetchMealsData = async () => {\n      const response = await fetch(process.env.REACT_APP_SERVER_URL + \"/meals\");\n      const result = await response.json();\n\n      try {\n        if (response.ok) {\n          setMeals(result);\n        } else {\n          throw new Error(result.message);\n        }\n      } catch (err) {\n        alert(err.message);\n      }\n    };\n\n    fetchMealsData();\n  }, []); //======================================================================\n  // UseEffect used to store user data and cart data in the local storage\n  //======================================================================\n\n  useEffect(() => {\n    localStorage.setItem(\"data\", JSON.stringify(user));\n    localStorage.setItem(\"cart\", JSON.stringify(cart));\n  }, [user, cart]); // =======================================================================\n  // Function to Add to the Cart\n  //========================================================================\n\n  const addToCart = meal => {\n    let item = cart.find(elem => elem._id === meal._id);\n\n    if (item) {\n      const preCheck = item.quantity + 1;\n\n      if (preCheck <= 5) {\n        item.quantity += 1;\n        setCart([...cart]);\n      } else {\n        alert(\"Reached maximum \");\n      }\n    } else {\n      if (cart.length + 1 > 3) {\n        alert('Reached Maximum Quantity of Meals');\n        return;\n      }\n\n      setCart([...cart, { ...meal,\n        quantity: 1\n      }]);\n    }\n  };\n\n  const {\n    fetch: originalFetch\n  } = window;\n\n  window.fetch = async function () {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    let [resource, config] = args;\n    let response = await originalFetch(resource, config);\n\n    if (!response.ok && response.status === 401) {\n      // 401 error handling\n      // sign out the user\n      return Promise.reject(response);\n    }\n\n    return response;\n  }; // =======================================================================\n  // Function to Remove from the Cart Item/s \n  //========================================================================\n\n\n  const removeFromCart = meal => {\n    let item = cart.find(elem => elem._id === meal._id);\n\n    if (item) {\n      const preCheck = item.quantity - 1;\n\n      if (preCheck > 0) {\n        item.quantity -= 1;\n        setCart([...cart]);\n      } else {\n        alert(\"Minimum Quantity is 1\");\n      }\n    }\n  }; // =======================================================================\n  // Function to Change Quantity\n  //========================================================================\n\n\n  const changeQuantity = (e, meal) => {\n    const foundItem = cart.find(elem => elem._id === meal._id);\n    foundItem.quantity = Number(e.target.value);\n    setCart([...cart]);\n  }; // =======================================================================\n  // Function to delete user account\n  //========================================================================\n\n\n  const deleteUserAccount = async () => {\n    const settings = {\n      method: \"DELETE\",\n      headers: {\n        \"Authorization\": \"Bearer \" + token\n      }\n    };\n    const response = await fetch(process.env.REACT_APP_SERVER_URL + `/users/${user.id}`, settings);\n    const result = await response.json();\n\n    try {\n      if (response.ok) {\n        setToken(false);\n        alert(result.message);\n        setIsLoggedIn(false);\n        setUser([...user]);\n      } else {\n        throw new Error(result.message);\n      }\n    } catch (err) {\n      alert(err.message);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(MyContext.Provider, {\n    value: {\n      meals,\n      setMeals,\n      cart,\n      setCart,\n      orders,\n      setOrders,\n      user,\n      setUser,\n      token,\n      setToken,\n      isLoggedIn,\n      setIsLoggedIn,\n      addToCart,\n      removeFromCart,\n      changeQuantity,\n      deleteUserAccount,\n      isAdmin,\n      setIsAdmin\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: /*#__PURE__*/_jsxDEV(Router, {\n        children: [/*#__PURE__*/_jsxDEV(Navigation, {\n          isLoggedIn: isLoggedIn\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Routes, {\n          children: [/*#__PURE__*/_jsxDEV(Route, {\n            path: \"/\",\n            element: /*#__PURE__*/_jsxDEV(LandingPage, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 196,\n              columnNumber: 38\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/howitworks\",\n            element: /*#__PURE__*/_jsxDEV(HowItWorksPage, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 197,\n              columnNumber: 48\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/sustainability\",\n            element: /*#__PURE__*/_jsxDEV(SustainabilityPage, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 198,\n              columnNumber: 52\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/meals\",\n            element: /*#__PURE__*/_jsxDEV(MealsPage, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 199,\n              columnNumber: 43\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/community\",\n            element: /*#__PURE__*/_jsxDEV(CommunityPage, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 200,\n              columnNumber: 47\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/login\",\n            element: /*#__PURE__*/_jsxDEV(LoginPage, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 201,\n              columnNumber: 43\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 201,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/register\",\n            element: /*#__PURE__*/_jsxDEV(RegisterPage, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 202,\n              columnNumber: 46\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/cart\",\n            element: /*#__PURE__*/_jsxDEV(CartPage, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 203,\n              columnNumber: 42\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/stripe-success\",\n            element: /*#__PURE__*/_jsxDEV(StripeSuccessPage, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 204,\n              columnNumber: 52\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 204,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/stripe-cancel\",\n            element: /*#__PURE__*/_jsxDEV(StripeCancelPage, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 205,\n              columnNumber: 51\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 191,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"sO+Qq/Vz6g594rhi/XBUBJCwEAI=\");\n\n_c = App;\nexport default App;\n/*\nimport React, { useState, useEffect } from \"react\";\nimport { HashRouter as Router, Routes, Route } from \"react-router-dom\";\nimport Navigation from \"./components/navbar/Navigation\";\nimport Choir from \"./views/choirPage/Choir\";\nimport ChurchService from \"./views/churchServicePage/ChurchService\";\nimport Community from \"./views/communityPage/Community\";\nimport Contact from \"./views/contactPage/Contact\";\nimport Login from \"./views/loginPage/Login\";\nimport Register from \"./views/registerPage/Register\";\nimport Children from \"./views/childrenPage/Children\";\nimport NotFound from \"./views/notFoundPage/NotFound\";\nimport Report from \"./views/reportPage/Report\";\n\n\n// a useContext hook to access the value of the context is used for the entire application\nexport const MyContext = React.createContext();\n\nfunction App() {\n  // The useState hook that is used to create a state variable and set its initial value.\n  const [users, setUsers] = useState([]);\n  const [messages, setMessages] = useState([]);\n  const [songs, setSongs] = useState([]);\n  const [finances, setFinances] = useState([]);\n  const [sacraments, setSacraments] = useState([]);\n  const [ isUserLoggedIn, setIsUserLoggedIn ] = useState(false);\n  const [consent, setConsent] = useState(false);\n  const [ token, setToken ] = useState(false);\n\n  // Token local storage useEffect hook to set the token state variable\n  useEffect(() => {\n    const data = JSON.parse(localStorage.getItem(\"data\"));\n    if (data) {\n      setToken(token);\n      setIsUserLoggedIn(true);\n      setUsers(data.id)\n    }\n  }, []);\n\n\n// The useEffect hook is used to run a piece of code on a specific condition.\n  useEffect(() => {\n    const fetchData = async () => {\n      const response = await fetch(\"http://localhost:5000/finances\");\n      const data = await response.json();\n\n      try{\n        if(response.ok) {\n          setFinances(data);\n        } else {\n          throw new Error(\"Something went wrong\");\n        }\n      }catch(err){\n        console.log(err);\n      }\n    }\n    fetchData();\n  }, []);\n\n  // The useEffect on the sacraments mount to run the sacraments report\n  useEffect(() => {\n    const fetchData = async () => {\n      const response = await fetch(\"http://localhost:5000/sacraments\");\n      const data = await response.json();\n\n      try{\n        if(response.ok) {\n          setSacraments(data);\n        } else {\n          throw new Error(\"Something went wrong\");\n        }\n      }catch(err){\n        console.log(err);\n      }\n    }\n    fetchData();\n  }, []);\n\n\n  return (\n    <MyContext.Provider value={{users, setUsers, messages, setMessages, songs, setSongs, finances, setFinances, sacraments, setSacraments, isUserLoggedIn, setIsUserLoggedIn, token, setToken, consent, setConsent}}>\n      <div className=\"App\">\n        <Router>\n          <header>\n            <Navigation />\n          </header>\n          <main>\n            <Routes>\n              <Route path=\"/\" element={<Community/>} />\n              <Route path=\"/service\" element={<ChurchService />} />\n              <Route path=\"/choir\" element={<Choir />} />\n              <Route path=\"/children\" element={<Children/>} />\n              <Route path=\"/contact\" element={<Contact />} />\n              <Route path=\"/login\" element={<Login />} />\n              <Route path=\"/register\" element={<Register />} />\n              <Route path=\"/report\" element={<Report/>} />\n              <Route path=\"*\" element={<NotFound/>} />\n            </Routes>\n          </main>\n          <footer></footer>\n        </Router>\n      </div>\n    </MyContext.Provider>\n  );\n}\n\nexport default App;\n*/\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/user/Desktop/myProjects/eritrean-roman-catholic-church-hamburg/frontend/src/App.js"],"names":["LandingPage","RegisterPage","Navigation","LoginPage","BrowserRouter","Router","Routes","Route","Navigate","HowItWorksPage","SustainabilityPage","CommunityPage","MealsPage","CartPage","StripeSuccessPage","StripeCancelPage","Footer","MyContext","React","createContext","App","cartItems","JSON","parse","localStorage","getItem","userData","meals","setMeals","useState","cart","setCart","orders","setOrders","user","setUser","isLoggedIn","setIsLoggedIn","token","setToken","isAdmin","setIsAdmin","userId","setUserId","hideSidemenu","setHideSideMenu","useEffect","fetchUserData","data","settings","method","headers","response","fetch","process","env","REACT_APP_SERVER_URL","result","json","ok","now","Date","tokenExpiry","getTime","id","_id","info","expiry","toISOString","Error","message","err","alert","fetchMealsData","setItem","stringify","addToCart","meal","item","find","elem","preCheck","quantity","length","originalFetch","window","args","resource","config","status","Promise","reject","removeFromCart","changeQuantity","e","foundItem","Number","target","value","deleteUserAccount"],"mappings":"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":["\n\nimport LandingPage from \"./views/landingpage/LandingPage\";\nimport RegisterPage from './views/registerpage/RegisterPage';\nimport Navigation from \"./components/globalComponents/navbar/Navigation\";\nimport LoginPage from \"./views/loginpage/LoginPage\";\nimport { BrowserRouter as Router, Routes, Route, Navigate } from \"react-router-dom\";\nimport HowItWorksPage from \"./views/howitworks/HowItWorksPage\";\nimport SustainabilityPage from \"./views/sustainability/Sustainability\";\nimport CommunityPage from \"./views/community/CommunityPage\";\nimport MealsPage from \"./views/mealspage/MealsPage\";\n\nimport CartPage from \"./views/cartpage/CartPage\";\nimport StripeSuccessPage from \"./views/stripe/stripeSuccess\";\nimport StripeCancelPage from \"./views/stripe/stripeCancel\";\nimport Footer from \"./components/globalComponents/footer/Footer\";\nimport './App.scss';\n\n\nexport const MyContext = React.createContext();\n\nfunction App() {\n  const cartItems = JSON.parse(localStorage.getItem(\"cart\")) || [];\n  const userData = JSON.parse(localStorage.getItem(\"data\")) || null;\n  const [meals, setMeals] = useState([]);\n  const [cart, setCart] = useState(cartItems);\n  const [orders, setOrders] = useState([]);\n  const [user, setUser] = useState(userData);\n  // this is the state variable that monitors the login\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [token, setToken] = useState(false);\n  const [isAdmin, setIsAdmin] = useState(false);\n  const [userId, setUserId] = useState(\"\");\n  const [hideSidemenu, setHideSideMenu] = useState(true);\n\n\n\n  //======================================================================\n  // UseEffect used to handle user and meal data functions \n  //======================================================================\n  useEffect( () => {\n    //===============================\n    // Function to fetch user data\n    //==============================\n    const fetchUserData = async () => {\n      const data = JSON.parse( localStorage.getItem( \"data\" ) );\n    if ( data ) {\n      const settings = {\n        method: \"POST\",\n        headers: {\n          \"token\": data.token\n        }\n      }\n\n      const response = await fetch( process.env.REACT_APP_SERVER_URL + \"/users/verifytoken\", settings);\n      const result = await response.json();\n      try{\n        if(response.ok) {\n          const now = new Date();\n          const tokenExpiry = new Date(now.getTime() + 1000 * 60 * 60);\n          setIsLoggedIn(true);\n          setUser({id:result.data._id, info:result.data, expiry: tokenExpiry.toISOString(), token:result.token  })\n          setToken( data.token );\n          setIsAdmin(data.info.isAdmin);\n          //setIsAdmin(result.isAdmin)\n        } else {\n          throw new Error(result.message)\n        }\n      }catch(err){\n        alert(err.message)\n      }\n    }\n    }\n    fetchUserData();\n    \n    //================================\n    // Function to fetch meals data\n    //===============================\n    const fetchMealsData = async () => {\n      const response = await fetch(process.env.REACT_APP_SERVER_URL + \"/meals\");\n      const result = await response.json();\n      try{\n        if(response.ok) {\n          setMeals(result)\n        } else {\n          throw new Error(result.message)\n        }\n      }catch(err){\n        alert(err.message)\n      }\n    }\n   fetchMealsData()\n  }, [] );\n\n  //======================================================================\n  // UseEffect used to store user data and cart data in the local storage\n  //======================================================================\n  useEffect( () =>  {\n    localStorage.setItem( \"data\", JSON.stringify( user ) );\n    localStorage.setItem( \"cart\", JSON.stringify( cart ) );\n  }, [ user,cart ] );\n  \n  // =======================================================================\n  // Function to Add to the Cart\n  //========================================================================\n const addToCart = (meal) => {\n    let item = cart.find((elem) => elem._id === meal._id);\n    \n    if (item) {const preCheck = item.quantity + 1;\n      if(preCheck <= 5){\n      item.quantity += 1;\n      setCart([...cart]);\n    }else{\n      alert(\"Reached maximum \")\n    }\n    } else {if ((cart.length +1) > 3 ){\n      alert('Reached Maximum Quantity of Meals')\n      return \n    }\n      setCart([...cart, { ...meal, quantity: 1 }]);\n    }\n  };\n\n  const { fetch: originalFetch } = window;\n  window.fetch = async (...args) => {\n    let [resource, config] = args;\n    let response = await originalFetch(resource, config);\n    if (!response.ok && response.status === 401) {\n      // 401 error handling\n      // sign out the user\n      return Promise.reject(response);\n    }\n    return response;\n  };\n\n  // =======================================================================\n  // Function to Remove from the Cart Item/s \n  //========================================================================\n  const removeFromCart = (meal) => {\n    let item = cart.find((elem) => elem._id === meal._id);\n    \n    if (item) {\n      const preCheck = item.quantity - 1;\n      if(preCheck > 0){\n          item.quantity -= 1;\n      setCart([...cart]);\n      }else{\n        alert(\"Minimum Quantity is 1\")\n      }\n    } \n  };\n\n  // =======================================================================\n  // Function to Change Quantity\n  //========================================================================\n  const changeQuantity = (e, meal) => {\n    const foundItem = cart.find((elem) => elem._id === meal._id);\n    foundItem.quantity =  Number(e.target.value);\n    setCart([...cart]);\n  };\n\n // =======================================================================\n // Function to delete user account\n //========================================================================\n  const deleteUserAccount = async () => {\n \n      const settings = {\n        method: \"DELETE\",\n        headers: {\n            \"Authorization\": \"Bearer \" + token\n        }\n      };\n      const response = await fetch( process.env.REACT_APP_SERVER_URL + `/users/${user.id}`, settings );\n      const result = await response.json();\n  \n      try{\n        if(response.ok) {\n          setToken(false);\n          alert(result.message);\n          setIsLoggedIn(false);\n          setUser([...user]);\n        } else {\n          throw new Error(result.message)\n        }\n      }catch(err){\n        alert(err.message)\n      }\n    };\n  \n return (\n    <MyContext.Provider value={{ meals, setMeals, cart, setCart, orders, setOrders, user, setUser, token, setToken, isLoggedIn, setIsLoggedIn, addToCart, removeFromCart, changeQuantity, deleteUserAccount, isAdmin, setIsAdmin }}>\n      <div className='App'>\n        <Router>\n          <Navigation isLoggedIn={isLoggedIn} />\n          <Routes>\n            <Route path=\"/\" element={<LandingPage />} />\n            <Route path=\"/howitworks\" element={<HowItWorksPage />} />\n            <Route path=\"/sustainability\" element={<SustainabilityPage />} />\n            <Route path=\"/meals\" element={<MealsPage />} />\n            <Route path=\"/community\" element={<CommunityPage />} />\n            <Route path=\"/login\" element={<LoginPage />} />\n            <Route path=\"/register\" element={<RegisterPage />} />\n            <Route path=\"/cart\" element={<CartPage />} />\n            <Route path=\"/stripe-success\" element={<StripeSuccessPage />} />\n            <Route path=\"/stripe-cancel\" element={<StripeCancelPage />} />\n          </Routes>\n          <Footer />\n        </Router>\n      </div>\n    </MyContext.Provider>\n  );\n}\nexport default App;\n\n\n/*\nimport React, { useState, useEffect } from \"react\";\nimport { HashRouter as Router, Routes, Route } from \"react-router-dom\";\nimport Navigation from \"./components/navbar/Navigation\";\nimport Choir from \"./views/choirPage/Choir\";\nimport ChurchService from \"./views/churchServicePage/ChurchService\";\nimport Community from \"./views/communityPage/Community\";\nimport Contact from \"./views/contactPage/Contact\";\nimport Login from \"./views/loginPage/Login\";\nimport Register from \"./views/registerPage/Register\";\nimport Children from \"./views/childrenPage/Children\";\nimport NotFound from \"./views/notFoundPage/NotFound\";\nimport Report from \"./views/reportPage/Report\";\n\n\n// a useContext hook to access the value of the context is used for the entire application\nexport const MyContext = React.createContext();\n\nfunction App() {\n  // The useState hook that is used to create a state variable and set its initial value.\n  const [users, setUsers] = useState([]);\n  const [messages, setMessages] = useState([]);\n  const [songs, setSongs] = useState([]);\n  const [finances, setFinances] = useState([]);\n  const [sacraments, setSacraments] = useState([]);\n  const [ isUserLoggedIn, setIsUserLoggedIn ] = useState(false);\n  const [consent, setConsent] = useState(false);\n  const [ token, setToken ] = useState(false);\n\n  // Token local storage useEffect hook to set the token state variable\n  useEffect(() => {\n    const data = JSON.parse(localStorage.getItem(\"data\"));\n    if (data) {\n      setToken(token);\n      setIsUserLoggedIn(true);\n      setUsers(data.id)\n    }\n  }, []);\n\n\n// The useEffect hook is used to run a piece of code on a specific condition.\n  useEffect(() => {\n    const fetchData = async () => {\n      const response = await fetch(\"http://localhost:5000/finances\");\n      const data = await response.json();\n\n      try{\n        if(response.ok) {\n          setFinances(data);\n        } else {\n          throw new Error(\"Something went wrong\");\n        }\n      }catch(err){\n        console.log(err);\n      }\n    }\n    fetchData();\n  }, []);\n\n  // The useEffect on the sacraments mount to run the sacraments report\n  useEffect(() => {\n    const fetchData = async () => {\n      const response = await fetch(\"http://localhost:5000/sacraments\");\n      const data = await response.json();\n\n      try{\n        if(response.ok) {\n          setSacraments(data);\n        } else {\n          throw new Error(\"Something went wrong\");\n        }\n      }catch(err){\n        console.log(err);\n      }\n    }\n    fetchData();\n  }, []);\n\n\n  return (\n    <MyContext.Provider value={{users, setUsers, messages, setMessages, songs, setSongs, finances, setFinances, sacraments, setSacraments, isUserLoggedIn, setIsUserLoggedIn, token, setToken, consent, setConsent}}>\n      <div className=\"App\">\n        <Router>\n          <header>\n            <Navigation />\n          </header>\n          <main>\n            <Routes>\n              <Route path=\"/\" element={<Community/>} />\n              <Route path=\"/service\" element={<ChurchService />} />\n              <Route path=\"/choir\" element={<Choir />} />\n              <Route path=\"/children\" element={<Children/>} />\n              <Route path=\"/contact\" element={<Contact />} />\n              <Route path=\"/login\" element={<Login />} />\n              <Route path=\"/register\" element={<Register />} />\n              <Route path=\"/report\" element={<Report/>} />\n              <Route path=\"*\" element={<NotFound/>} />\n            </Routes>\n          </main>\n          <footer></footer>\n        </Router>\n      </div>\n    </MyContext.Provider>\n  );\n}\n\nexport default App;\n*/"]},"metadata":{},"sourceType":"module"}