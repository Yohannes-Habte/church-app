{"ast":null,"code":"var _jsxFileName = \"/home/user/Desktop/myProjects/eritrean-roman-catholic-church-hamburg/frontend/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { HashRouter as Router, Routes, Route } from \"react-router-dom\";\nimport Navigation from \"./components/navbar/Navigation\";\nimport Choir from \"./views/choirPage/Choir\";\nimport ChurchService from \"./views/churchServicePage/ChurchService\";\nimport Community from \"./views/communityPage/Community\";\nimport Contact from \"./views/contactPage/Contact\";\nimport Login from \"./views/loginPage/Login\";\nimport Register from \"./views/registerPage/Register\";\nimport Children from \"./views/childrenPage/Children\";\nimport NotFound from \"./views/notFoundPage/NotFound\";\nimport Report from \"./views/reportPage/Report\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const MyContext = /*#__PURE__*/React.createContext();\n\nfunction App() {\n  _s();\n\n  const [users, setUsers] = useState([]);\n  const [messages, setMessages] = useState([]);\n  const [songs, setSongs] = useState([]);\n  const [finances, setFinances] = useState([]);\n  const [sacraments, setSacraments] = useState([]);\n  const [isUserLoggedIn, setIsUserLoggedIn] = useState(false);\n  const [consent, setConsent] = useState(false);\n  const [token, setToken] = useState(false); //======================================================================\n  // UseEffect used to fetch fin data\n  //======================================================================\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const response = await fetch(\"http://localhost:5000/finances\");\n      const data = await response.json();\n\n      try {\n        if (response.ok) {\n          setFinances(data);\n        } else {\n          throw new Error(\"Something went wrong\");\n        }\n      } catch (err) {\n        console.log(err);\n      }\n    };\n\n    fetchData();\n  }, []); // The useEffect on the sacraments mount to run the sacraments report\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const response = await fetch(\"http://localhost:5000/sacraments\");\n      const data = await response.json();\n\n      try {\n        if (response.ok) {\n          setSacraments(data);\n        } else {\n          throw new Error(\"Something went wrong\");\n        }\n      } catch (err) {\n        console.log(err);\n      }\n    };\n\n    fetchData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(MyContext.Provider, {\n    value: {},\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: /*#__PURE__*/_jsxDEV(Router, {\n        children: [/*#__PURE__*/_jsxDEV(Navigation, {\n          isLoggedIn: isLoggedIn\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Routes, {\n          children: [/*#__PURE__*/_jsxDEV(Route, {\n            path: \"/\",\n            element: /*#__PURE__*/_jsxDEV(LandingPage, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 38\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/howitworks\",\n            element: /*#__PURE__*/_jsxDEV(HowItWorksPage, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 48\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/sustainability\",\n            element: /*#__PURE__*/_jsxDEV(SustainabilityPage, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 52\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/meals\",\n            element: /*#__PURE__*/_jsxDEV(MealsPage, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 43\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/community\",\n            element: /*#__PURE__*/_jsxDEV(CommunityPage, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 47\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/login\",\n            element: /*#__PURE__*/_jsxDEV(LoginPage, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 43\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/register\",\n            element: /*#__PURE__*/_jsxDEV(RegisterPage, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 46\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/cart\",\n            element: /*#__PURE__*/_jsxDEV(CartPage, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 42\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/stripe-success\",\n            element: /*#__PURE__*/_jsxDEV(StripeSuccessPage, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 52\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/stripe-cancel\",\n            element: /*#__PURE__*/_jsxDEV(StripeCancelPage, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 51\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"A+OwWEbHQqEYDGh5hX1wIiBWHyA=\");\n\n_c = App;\nexport default App;\n/*\n\n\n\n// a useContext hook to access the value of the context is used for the entire application\nexport const MyContext = React.createContext();\n\nfunction App() {\n  // The useState hook that is used to create a state variable and set its initial value.\n  const [users, setUsers] = useState([]);\n  const [messages, setMessages] = useState([]);\n  const [songs, setSongs] = useState([]);\n  const [finances, setFinances] = useState([]);\n  const [sacraments, setSacraments] = useState([]);\n  const [ isUserLoggedIn, setIsUserLoggedIn ] = useState(false);\n  const [consent, setConsent] = useState(false);\n  const [ token, setToken ] = useState(false);\n\n  // Token local storage useEffect hook to set the token state variable\n  useEffect(() => {\n    const data = JSON.parse(localStorage.getItem(\"data\"));\n    if (data) {\n      setToken(token);\n      setIsUserLoggedIn(true);\n      setUsers(data.id)\n    }\n  }, []);\n\n\n// The useEffect hook is used to run a piece of code on a specific condition.\n \n\n  return (\n    <MyContext.Provider value={{users, setUsers, messages, setMessages, songs, setSongs, finances, setFinances, sacraments, setSacraments, isUserLoggedIn, setIsUserLoggedIn, token, setToken, consent, setConsent}}>\n      <div className=\"App\">\n        <Router>\n          <header>\n            <Navigation />\n          </header>\n          <main>\n            <Routes>\n              <Route path=\"/\" element={<Community/>} />\n              <Route path=\"/service\" element={<ChurchService />} />\n              <Route path=\"/choir\" element={<Choir />} />\n              <Route path=\"/children\" element={<Children/>} />\n              <Route path=\"/contact\" element={<Contact />} />\n              <Route path=\"/login\" element={<Login />} />\n              <Route path=\"/register\" element={<Register />} />\n              <Route path=\"/report\" element={<Report/>} />\n              <Route path=\"*\" element={<NotFound/>} />\n            </Routes>\n          </main>\n          <footer></footer>\n        </Router>\n      </div>\n    </MyContext.Provider>\n  );\n}\n\nexport default App;\n*/\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/user/Desktop/myProjects/eritrean-roman-catholic-church-hamburg/frontend/src/App.js"],"names":["React","useState","useEffect","HashRouter","Router","Routes","Route","Navigation","Choir","ChurchService","Community","Contact","Login","Register","Children","NotFound","Report","MyContext","createContext","App","users","setUsers","messages","setMessages","songs","setSongs","finances","setFinances","sacraments","setSacraments","isUserLoggedIn","setIsUserLoggedIn","consent","setConsent","token","setToken","fetchData","response","fetch","data","json","ok","Error","err","console","log","isLoggedIn"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { HashRouter as Router, Routes, Route } from \"react-router-dom\";\nimport Navigation from \"./components/navbar/Navigation\";\nimport Choir from \"./views/choirPage/Choir\";\nimport ChurchService from \"./views/churchServicePage/ChurchService\";\nimport Community from \"./views/communityPage/Community\";\nimport Contact from \"./views/contactPage/Contact\";\nimport Login from \"./views/loginPage/Login\";\nimport Register from \"./views/registerPage/Register\";\nimport Children from \"./views/childrenPage/Children\";\nimport NotFound from \"./views/notFoundPage/NotFound\";\nimport Report from \"./views/reportPage/Report\";\n\n\nexport const MyContext = React.createContext();\n\nfunction App() {\n  const [users, setUsers] = useState([]);\n  const [messages, setMessages] = useState([]);\n  const [songs, setSongs] = useState([]);\n  const [finances, setFinances] = useState([]);\n  const [sacraments, setSacraments] = useState([]);\n  const [ isUserLoggedIn, setIsUserLoggedIn ] = useState(false);\n  const [consent, setConsent] = useState(false);\n  const [ token, setToken ] = useState(false);\n\n\n\n\n  //======================================================================\n  // UseEffect used to fetch fin data\n  //======================================================================\n  \n  useEffect(() => {\n    const fetchData = async () => {\n      const response = await fetch(\"http://localhost:5000/finances\");\n      const data = await response.json();\n\n      try{\n        if(response.ok) {\n          setFinances(data);\n        } else {\n          throw new Error(\"Something went wrong\");\n        }\n      }catch(err){\n        console.log(err);\n      }\n    }\n    fetchData();\n  }, []);\n\n  // The useEffect on the sacraments mount to run the sacraments report\n  useEffect(() => {\n    const fetchData = async () => {\n      const response = await fetch(\"http://localhost:5000/sacraments\");\n      const data = await response.json();\n\n      try{\n        if(response.ok) {\n          setSacraments(data);\n        } else {\n          throw new Error(\"Something went wrong\");\n        }\n      }catch(err){\n        console.log(err);\n      }\n    }\n    fetchData();\n  }, []);\n\n  \n return (\n    <MyContext.Provider value={{  }}>\n      <div className='App'>\n        <Router>\n          <Navigation isLoggedIn={isLoggedIn} />\n          <Routes>\n            <Route path=\"/\" element={<LandingPage />} />\n            <Route path=\"/howitworks\" element={<HowItWorksPage />} />\n            <Route path=\"/sustainability\" element={<SustainabilityPage />} />\n            <Route path=\"/meals\" element={<MealsPage />} />\n            <Route path=\"/community\" element={<CommunityPage />} />\n            <Route path=\"/login\" element={<LoginPage />} />\n            <Route path=\"/register\" element={<RegisterPage />} />\n            <Route path=\"/cart\" element={<CartPage />} />\n            <Route path=\"/stripe-success\" element={<StripeSuccessPage />} />\n            <Route path=\"/stripe-cancel\" element={<StripeCancelPage />} />\n          </Routes>\n          <Footer />\n        </Router>\n      </div>\n    </MyContext.Provider>\n  );\n}\nexport default App;\n\n\n/*\n\n\n\n// a useContext hook to access the value of the context is used for the entire application\nexport const MyContext = React.createContext();\n\nfunction App() {\n  // The useState hook that is used to create a state variable and set its initial value.\n  const [users, setUsers] = useState([]);\n  const [messages, setMessages] = useState([]);\n  const [songs, setSongs] = useState([]);\n  const [finances, setFinances] = useState([]);\n  const [sacraments, setSacraments] = useState([]);\n  const [ isUserLoggedIn, setIsUserLoggedIn ] = useState(false);\n  const [consent, setConsent] = useState(false);\n  const [ token, setToken ] = useState(false);\n\n  // Token local storage useEffect hook to set the token state variable\n  useEffect(() => {\n    const data = JSON.parse(localStorage.getItem(\"data\"));\n    if (data) {\n      setToken(token);\n      setIsUserLoggedIn(true);\n      setUsers(data.id)\n    }\n  }, []);\n\n\n// The useEffect hook is used to run a piece of code on a specific condition.\n \n\n  return (\n    <MyContext.Provider value={{users, setUsers, messages, setMessages, songs, setSongs, finances, setFinances, sacraments, setSacraments, isUserLoggedIn, setIsUserLoggedIn, token, setToken, consent, setConsent}}>\n      <div className=\"App\">\n        <Router>\n          <header>\n            <Navigation />\n          </header>\n          <main>\n            <Routes>\n              <Route path=\"/\" element={<Community/>} />\n              <Route path=\"/service\" element={<ChurchService />} />\n              <Route path=\"/choir\" element={<Choir />} />\n              <Route path=\"/children\" element={<Children/>} />\n              <Route path=\"/contact\" element={<Contact />} />\n              <Route path=\"/login\" element={<Login />} />\n              <Route path=\"/register\" element={<Register />} />\n              <Route path=\"/report\" element={<Report/>} />\n              <Route path=\"*\" element={<NotFound/>} />\n            </Routes>\n          </main>\n          <footer></footer>\n        </Router>\n      </div>\n    </MyContext.Provider>\n  );\n}\n\nexport default App;\n*/"]},"metadata":{},"sourceType":"module"}