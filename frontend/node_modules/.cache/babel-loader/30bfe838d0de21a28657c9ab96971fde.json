{"ast":null,"code":"var _jsxFileName = \"/home/user/Desktop/myProjects/eritrean-roman-catholic-church-hamburg/frontend/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport LandingPage from \"./views/landingpage/LandingPage\";\nimport RegisterPage from './views/registerpage/RegisterPage';\nimport Navigation from \"./components/globalComponents/navbar/Navigation\";\nimport LoginPage from \"./views/loginpage/LoginPage\";\nimport { BrowserRouter as Router, Routes, Route, Navigate } from \"react-router-dom\";\nimport HowItWorksPage from \"./views/howitworks/HowItWorksPage\";\nimport SustainabilityPage from \"./views/sustainability/Sustainability\";\nimport CommunityPage from \"./views/community/CommunityPage\";\nimport MealsPage from \"./views/mealspage/MealsPage\";\nimport CartPage from \"./views/cartpage/CartPage\";\nimport StripeSuccessPage from \"./views/stripe/stripeSuccess\";\nimport StripeCancelPage from \"./views/stripe/stripeCancel\";\nimport Footer from \"./components/globalComponents/footer/Footer\";\nimport './App.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const MyContext = /*#__PURE__*/React.createContext();\n\nfunction App() {\n  _s();\n\n  const cartItems = JSON.parse(localStorage.getItem(\"cart\")) || [];\n  const userData = JSON.parse(localStorage.getItem(\"data\")) || null;\n  const [meals, setMeals] = useState([]);\n  const [cart, setCart] = useState(cartItems);\n  const [orders, setOrders] = useState([]);\n  const [user, setUser] = useState(userData); // this is the state variable that monitors the login\n\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [token, setToken] = useState(false);\n  const [isAdmin, setIsAdmin] = useState(false);\n  const [userId, setUserId] = useState(\"\");\n  const [hideSidemenu, setHideSideMenu] = useState(true); //======================================================================\n  // UseEffect used to handle user and meal data functions \n  //======================================================================\n  //======================================================================\n  // UseEffect used to store user data and cart data in the local storage\n  //======================================================================\n\n  useEffect(() => {\n    localStorage.setItem(\"data\", JSON.stringify(user));\n    localStorage.setItem(\"cart\", JSON.stringify(cart));\n  }, [user, cart]); // =======================================================================\n  // Function to Add to the Cart\n  //========================================================================\n\n  const addToCart = meal => {\n    let item = cart.find(elem => elem._id === meal._id);\n\n    if (item) {\n      const preCheck = item.quantity + 1;\n\n      if (preCheck <= 5) {\n        item.quantity += 1;\n        setCart([...cart]);\n      } else {\n        alert(\"Reached maximum \");\n      }\n    } else {\n      if (cart.length + 1 > 3) {\n        alert('Reached Maximum Quantity of Meals');\n        return;\n      }\n\n      setCart([...cart, { ...meal,\n        quantity: 1\n      }]);\n    }\n  };\n\n  const {\n    fetch: originalFetch\n  } = window;\n\n  window.fetch = async function () {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    let [resource, config] = args;\n    let response = await originalFetch(resource, config);\n\n    if (!response.ok && response.status === 401) {\n      // 401 error handling\n      // sign out the user\n      return Promise.reject(response);\n    }\n\n    return response;\n  }; // =======================================================================\n  // Function to Remove from the Cart Item/s \n  //========================================================================\n\n\n  const removeFromCart = meal => {\n    let item = cart.find(elem => elem._id === meal._id);\n\n    if (item) {\n      const preCheck = item.quantity - 1;\n\n      if (preCheck > 0) {\n        item.quantity -= 1;\n        setCart([...cart]);\n      } else {\n        alert(\"Minimum Quantity is 1\");\n      }\n    }\n  }; // =======================================================================\n  // Function to Change Quantity\n  //========================================================================\n\n\n  const changeQuantity = (e, meal) => {\n    const foundItem = cart.find(elem => elem._id === meal._id);\n    foundItem.quantity = Number(e.target.value);\n    setCart([...cart]);\n  }; // =======================================================================\n  // Function to delete user account\n  //========================================================================\n\n\n  const deleteUserAccount = async () => {\n    const settings = {\n      method: \"DELETE\",\n      headers: {\n        \"Authorization\": \"Bearer \" + token\n      }\n    };\n    const response = await fetch(process.env.REACT_APP_SERVER_URL + `/users/${user.id}`, settings);\n    const result = await response.json();\n\n    try {\n      if (response.ok) {\n        setToken(false);\n        alert(result.message);\n        setIsLoggedIn(false);\n        setUser([...user]);\n      } else {\n        throw new Error(result.message);\n      }\n    } catch (err) {\n      alert(err.message);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(MyContext.Provider, {\n    value: {\n      meals,\n      setMeals,\n      cart,\n      setCart,\n      orders,\n      setOrders,\n      user,\n      setUser,\n      token,\n      setToken,\n      isLoggedIn,\n      setIsLoggedIn,\n      addToCart,\n      removeFromCart,\n      changeQuantity,\n      deleteUserAccount,\n      isAdmin,\n      setIsAdmin\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: /*#__PURE__*/_jsxDEV(Router, {\n        children: [/*#__PURE__*/_jsxDEV(Navigation, {\n          isLoggedIn: isLoggedIn\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Routes, {\n          children: [/*#__PURE__*/_jsxDEV(Route, {\n            path: \"/\",\n            element: /*#__PURE__*/_jsxDEV(LandingPage, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 38\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/howitworks\",\n            element: /*#__PURE__*/_jsxDEV(HowItWorksPage, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 144,\n              columnNumber: 48\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/sustainability\",\n            element: /*#__PURE__*/_jsxDEV(SustainabilityPage, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 145,\n              columnNumber: 52\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/meals\",\n            element: /*#__PURE__*/_jsxDEV(MealsPage, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 146,\n              columnNumber: 43\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/community\",\n            element: /*#__PURE__*/_jsxDEV(CommunityPage, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 147,\n              columnNumber: 47\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/login\",\n            element: /*#__PURE__*/_jsxDEV(LoginPage, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 148,\n              columnNumber: 43\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/register\",\n            element: /*#__PURE__*/_jsxDEV(RegisterPage, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 149,\n              columnNumber: 46\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/cart\",\n            element: /*#__PURE__*/_jsxDEV(CartPage, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 150,\n              columnNumber: 42\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/stripe-success\",\n            element: /*#__PURE__*/_jsxDEV(StripeSuccessPage, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 151,\n              columnNumber: 52\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/stripe-cancel\",\n            element: /*#__PURE__*/_jsxDEV(StripeCancelPage, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 152,\n              columnNumber: 51\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 138,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"NLafa+QMSEg30qiIjEEm2pLr3/8=\");\n\n_c = App;\nexport default App;\n/*\nimport React, { useState, useEffect } from \"react\";\nimport { HashRouter as Router, Routes, Route } from \"react-router-dom\";\nimport Navigation from \"./components/navbar/Navigation\";\nimport Choir from \"./views/choirPage/Choir\";\nimport ChurchService from \"./views/churchServicePage/ChurchService\";\nimport Community from \"./views/communityPage/Community\";\nimport Contact from \"./views/contactPage/Contact\";\nimport Login from \"./views/loginPage/Login\";\nimport Register from \"./views/registerPage/Register\";\nimport Children from \"./views/childrenPage/Children\";\nimport NotFound from \"./views/notFoundPage/NotFound\";\nimport Report from \"./views/reportPage/Report\";\n\n\n// a useContext hook to access the value of the context is used for the entire application\nexport const MyContext = React.createContext();\n\nfunction App() {\n  // The useState hook that is used to create a state variable and set its initial value.\n  const [users, setUsers] = useState([]);\n  const [messages, setMessages] = useState([]);\n  const [songs, setSongs] = useState([]);\n  const [finances, setFinances] = useState([]);\n  const [sacraments, setSacraments] = useState([]);\n  const [ isUserLoggedIn, setIsUserLoggedIn ] = useState(false);\n  const [consent, setConsent] = useState(false);\n  const [ token, setToken ] = useState(false);\n\n  // Token local storage useEffect hook to set the token state variable\n  useEffect(() => {\n    const data = JSON.parse(localStorage.getItem(\"data\"));\n    if (data) {\n      setToken(token);\n      setIsUserLoggedIn(true);\n      setUsers(data.id)\n    }\n  }, []);\n\n\n// The useEffect hook is used to run a piece of code on a specific condition.\n  useEffect(() => {\n    const fetchData = async () => {\n      const response = await fetch(\"http://localhost:5000/finances\");\n      const data = await response.json();\n\n      try{\n        if(response.ok) {\n          setFinances(data);\n        } else {\n          throw new Error(\"Something went wrong\");\n        }\n      }catch(err){\n        console.log(err);\n      }\n    }\n    fetchData();\n  }, []);\n\n  // The useEffect on the sacraments mount to run the sacraments report\n  useEffect(() => {\n    const fetchData = async () => {\n      const response = await fetch(\"http://localhost:5000/sacraments\");\n      const data = await response.json();\n\n      try{\n        if(response.ok) {\n          setSacraments(data);\n        } else {\n          throw new Error(\"Something went wrong\");\n        }\n      }catch(err){\n        console.log(err);\n      }\n    }\n    fetchData();\n  }, []);\n\n\n  return (\n    <MyContext.Provider value={{users, setUsers, messages, setMessages, songs, setSongs, finances, setFinances, sacraments, setSacraments, isUserLoggedIn, setIsUserLoggedIn, token, setToken, consent, setConsent}}>\n      <div className=\"App\">\n        <Router>\n          <header>\n            <Navigation />\n          </header>\n          <main>\n            <Routes>\n              <Route path=\"/\" element={<Community/>} />\n              <Route path=\"/service\" element={<ChurchService />} />\n              <Route path=\"/choir\" element={<Choir />} />\n              <Route path=\"/children\" element={<Children/>} />\n              <Route path=\"/contact\" element={<Contact />} />\n              <Route path=\"/login\" element={<Login />} />\n              <Route path=\"/register\" element={<Register />} />\n              <Route path=\"/report\" element={<Report/>} />\n              <Route path=\"*\" element={<NotFound/>} />\n            </Routes>\n          </main>\n          <footer></footer>\n        </Router>\n      </div>\n    </MyContext.Provider>\n  );\n}\n\nexport default App;\n*/\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/user/Desktop/myProjects/eritrean-roman-catholic-church-hamburg/frontend/src/App.js"],"names":["React","useState","useEffect","LandingPage","RegisterPage","Navigation","LoginPage","BrowserRouter","Router","Routes","Route","Navigate","HowItWorksPage","SustainabilityPage","CommunityPage","MealsPage","CartPage","StripeSuccessPage","StripeCancelPage","Footer","MyContext","createContext","App","cartItems","JSON","parse","localStorage","getItem","userData","meals","setMeals","cart","setCart","orders","setOrders","user","setUser","isLoggedIn","setIsLoggedIn","token","setToken","isAdmin","setIsAdmin","userId","setUserId","hideSidemenu","setHideSideMenu","setItem","stringify","addToCart","meal","item","find","elem","_id","preCheck","quantity","alert","length","fetch","originalFetch","window","args","resource","config","response","ok","status","Promise","reject","removeFromCart","changeQuantity","e","foundItem","Number","target","value","deleteUserAccount","settings","method","headers","process","env","REACT_APP_SERVER_URL","id","result","json","message","Error","err"],"mappings":"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":["import React, { useState, useEffect } from \"react\";\n\nimport LandingPage from \"./views/landingpage/LandingPage\";\nimport RegisterPage from './views/registerpage/RegisterPage';\nimport Navigation from \"./components/globalComponents/navbar/Navigation\";\nimport LoginPage from \"./views/loginpage/LoginPage\";\nimport { BrowserRouter as Router, Routes, Route, Navigate } from \"react-router-dom\";\nimport HowItWorksPage from \"./views/howitworks/HowItWorksPage\";\nimport SustainabilityPage from \"./views/sustainability/Sustainability\";\nimport CommunityPage from \"./views/community/CommunityPage\";\nimport MealsPage from \"./views/mealspage/MealsPage\";\n\nimport CartPage from \"./views/cartpage/CartPage\";\nimport StripeSuccessPage from \"./views/stripe/stripeSuccess\";\nimport StripeCancelPage from \"./views/stripe/stripeCancel\";\nimport Footer from \"./components/globalComponents/footer/Footer\";\nimport './App.scss';\n\n\nexport const MyContext = React.createContext();\n\nfunction App() {\n  const cartItems = JSON.parse(localStorage.getItem(\"cart\")) || [];\n  const userData = JSON.parse(localStorage.getItem(\"data\")) || null;\n  const [meals, setMeals] = useState([]);\n  const [cart, setCart] = useState(cartItems);\n  const [orders, setOrders] = useState([]);\n  const [user, setUser] = useState(userData);\n  // this is the state variable that monitors the login\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [token, setToken] = useState(false);\n  const [isAdmin, setIsAdmin] = useState(false);\n  const [userId, setUserId] = useState(\"\");\n  const [hideSidemenu, setHideSideMenu] = useState(true);\n\n\n\n  //======================================================================\n  // UseEffect used to handle user and meal data functions \n  //======================================================================\n  \n  //======================================================================\n  // UseEffect used to store user data and cart data in the local storage\n  //======================================================================\n  useEffect( () =>  {\n    localStorage.setItem( \"data\", JSON.stringify( user ) );\n    localStorage.setItem( \"cart\", JSON.stringify( cart ) );\n  }, [ user,cart ] );\n  \n  // =======================================================================\n  // Function to Add to the Cart\n  //========================================================================\n const addToCart = (meal) => {\n    let item = cart.find((elem) => elem._id === meal._id);\n    \n    if (item) {const preCheck = item.quantity + 1;\n      if(preCheck <= 5){\n      item.quantity += 1;\n      setCart([...cart]);\n    }else{\n      alert(\"Reached maximum \")\n    }\n    } else {if ((cart.length +1) > 3 ){\n      alert('Reached Maximum Quantity of Meals')\n      return \n    }\n      setCart([...cart, { ...meal, quantity: 1 }]);\n    }\n  };\n\n  const { fetch: originalFetch } = window;\n  window.fetch = async (...args) => {\n    let [resource, config] = args;\n    let response = await originalFetch(resource, config);\n    if (!response.ok && response.status === 401) {\n      // 401 error handling\n      // sign out the user\n      return Promise.reject(response);\n    }\n    return response;\n  };\n\n  // =======================================================================\n  // Function to Remove from the Cart Item/s \n  //========================================================================\n  const removeFromCart = (meal) => {\n    let item = cart.find((elem) => elem._id === meal._id);\n    \n    if (item) {\n      const preCheck = item.quantity - 1;\n      if(preCheck > 0){\n          item.quantity -= 1;\n      setCart([...cart]);\n      }else{\n        alert(\"Minimum Quantity is 1\")\n      }\n    } \n  };\n\n  // =======================================================================\n  // Function to Change Quantity\n  //========================================================================\n  const changeQuantity = (e, meal) => {\n    const foundItem = cart.find((elem) => elem._id === meal._id);\n    foundItem.quantity =  Number(e.target.value);\n    setCart([...cart]);\n  };\n\n // =======================================================================\n // Function to delete user account\n //========================================================================\n  const deleteUserAccount = async () => {\n \n      const settings = {\n        method: \"DELETE\",\n        headers: {\n            \"Authorization\": \"Bearer \" + token\n        }\n      };\n      const response = await fetch( process.env.REACT_APP_SERVER_URL + `/users/${user.id}`, settings );\n      const result = await response.json();\n  \n      try{\n        if(response.ok) {\n          setToken(false);\n          alert(result.message);\n          setIsLoggedIn(false);\n          setUser([...user]);\n        } else {\n          throw new Error(result.message)\n        }\n      }catch(err){\n        alert(err.message)\n      }\n    };\n  \n return (\n    <MyContext.Provider value={{ meals, setMeals, cart, setCart, orders, setOrders, user, setUser, token, setToken, isLoggedIn, setIsLoggedIn, addToCart, removeFromCart, changeQuantity, deleteUserAccount, isAdmin, setIsAdmin }}>\n      <div className='App'>\n        <Router>\n          <Navigation isLoggedIn={isLoggedIn} />\n          <Routes>\n            <Route path=\"/\" element={<LandingPage />} />\n            <Route path=\"/howitworks\" element={<HowItWorksPage />} />\n            <Route path=\"/sustainability\" element={<SustainabilityPage />} />\n            <Route path=\"/meals\" element={<MealsPage />} />\n            <Route path=\"/community\" element={<CommunityPage />} />\n            <Route path=\"/login\" element={<LoginPage />} />\n            <Route path=\"/register\" element={<RegisterPage />} />\n            <Route path=\"/cart\" element={<CartPage />} />\n            <Route path=\"/stripe-success\" element={<StripeSuccessPage />} />\n            <Route path=\"/stripe-cancel\" element={<StripeCancelPage />} />\n          </Routes>\n          <Footer />\n        </Router>\n      </div>\n    </MyContext.Provider>\n  );\n}\nexport default App;\n\n\n/*\nimport React, { useState, useEffect } from \"react\";\nimport { HashRouter as Router, Routes, Route } from \"react-router-dom\";\nimport Navigation from \"./components/navbar/Navigation\";\nimport Choir from \"./views/choirPage/Choir\";\nimport ChurchService from \"./views/churchServicePage/ChurchService\";\nimport Community from \"./views/communityPage/Community\";\nimport Contact from \"./views/contactPage/Contact\";\nimport Login from \"./views/loginPage/Login\";\nimport Register from \"./views/registerPage/Register\";\nimport Children from \"./views/childrenPage/Children\";\nimport NotFound from \"./views/notFoundPage/NotFound\";\nimport Report from \"./views/reportPage/Report\";\n\n\n// a useContext hook to access the value of the context is used for the entire application\nexport const MyContext = React.createContext();\n\nfunction App() {\n  // The useState hook that is used to create a state variable and set its initial value.\n  const [users, setUsers] = useState([]);\n  const [messages, setMessages] = useState([]);\n  const [songs, setSongs] = useState([]);\n  const [finances, setFinances] = useState([]);\n  const [sacraments, setSacraments] = useState([]);\n  const [ isUserLoggedIn, setIsUserLoggedIn ] = useState(false);\n  const [consent, setConsent] = useState(false);\n  const [ token, setToken ] = useState(false);\n\n  // Token local storage useEffect hook to set the token state variable\n  useEffect(() => {\n    const data = JSON.parse(localStorage.getItem(\"data\"));\n    if (data) {\n      setToken(token);\n      setIsUserLoggedIn(true);\n      setUsers(data.id)\n    }\n  }, []);\n\n\n// The useEffect hook is used to run a piece of code on a specific condition.\n  useEffect(() => {\n    const fetchData = async () => {\n      const response = await fetch(\"http://localhost:5000/finances\");\n      const data = await response.json();\n\n      try{\n        if(response.ok) {\n          setFinances(data);\n        } else {\n          throw new Error(\"Something went wrong\");\n        }\n      }catch(err){\n        console.log(err);\n      }\n    }\n    fetchData();\n  }, []);\n\n  // The useEffect on the sacraments mount to run the sacraments report\n  useEffect(() => {\n    const fetchData = async () => {\n      const response = await fetch(\"http://localhost:5000/sacraments\");\n      const data = await response.json();\n\n      try{\n        if(response.ok) {\n          setSacraments(data);\n        } else {\n          throw new Error(\"Something went wrong\");\n        }\n      }catch(err){\n        console.log(err);\n      }\n    }\n    fetchData();\n  }, []);\n\n\n  return (\n    <MyContext.Provider value={{users, setUsers, messages, setMessages, songs, setSongs, finances, setFinances, sacraments, setSacraments, isUserLoggedIn, setIsUserLoggedIn, token, setToken, consent, setConsent}}>\n      <div className=\"App\">\n        <Router>\n          <header>\n            <Navigation />\n          </header>\n          <main>\n            <Routes>\n              <Route path=\"/\" element={<Community/>} />\n              <Route path=\"/service\" element={<ChurchService />} />\n              <Route path=\"/choir\" element={<Choir />} />\n              <Route path=\"/children\" element={<Children/>} />\n              <Route path=\"/contact\" element={<Contact />} />\n              <Route path=\"/login\" element={<Login />} />\n              <Route path=\"/register\" element={<Register />} />\n              <Route path=\"/report\" element={<Report/>} />\n              <Route path=\"*\" element={<NotFound/>} />\n            </Routes>\n          </main>\n          <footer></footer>\n        </Router>\n      </div>\n    </MyContext.Provider>\n  );\n}\n\nexport default App;\n*/"]},"metadata":{},"sourceType":"module"}